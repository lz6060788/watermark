{
  "compilerOptions": {
    /* 基本选项 */
    "target": "ES6",                          // 指定编译后的 JavaScript 目标版本: 'ES3' (默认), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', 'ESNext'
    "module": "commonjs",                     // 指定模块代码生成方式: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', 'ESNext'
    "lib": ["ES6", "DOM"],                   // 编译过程中需要引入的库文件声明
    "allowJs": true,                          // 允许编译 JavaScript 文件
    "checkJs": true,                          // 在 .js 文件中报告错误
    "jsx": "preserve",                        // 指定 JSX 代码的生成方式: 'preserve', 'react-native', 'react', 'react-jsx', 'react-jsxdev'
    
    /* 严格类型检查选项 */
    "strict": true,                           // 启用所有严格类型检查选项
    "noImplicitAny": true,                    // 不允许隐式的 any 类型
    "strictNullChecks": true,                 // 启用严格的 null 检查
    "strictFunctionTypes": true,              // 启用严格的函数类型检查
    "strictBindCallApply": true,              // 启用严格的 bind/call/apply 方法参数检查
    "strictPropertyInitialization": true,     // 启用严格的类属性初始化检查
    "noImplicitThis": true,                   // 不允许隐式的 this 类型
    "alwaysStrict": true,                     // 以严格模式解析并为每个源文件生成 "use strict" 语句
    
    /* 额外检查 */
    "noUnusedLocals": true,                   // 报告未使用的局部变量的错误
    "noUnusedParameters": true,               // 报告未使用的参数的错误
    "noImplicitReturns": true,                // 不是函数的所有返回路径都有返回值时报错
    "noFallthroughCasesInSwitch": true,       // 报告 switch 语句中的 fallthrough 错误
    
    /* 模块解析选项 */
    "moduleResolution": "node",               // 选择模块解析策略: 'node' (Node.js) 或 'classic' (TypeScript pre-1.6)
    "baseUrl": "./",                          // 用于解析非相对模块名称的基目录
    "paths": {},                              // 模块名到基于 baseUrl 的路径映射列表
    "rootDirs": [],                           // 根文件夹列表，其组合内容表示项目运行时的结构内容
    "typeRoots": [],                          // 包含类型声明的文件列表
    "types": [],                              // 需要包含的类型声明文件名列表
    "allowSyntheticDefaultImports": true,     // 允许从没有默认导出的模块中默认导入
    
    /* Source Map 选项 */
    "sourceMap": true,                        // 生成相应的 .map 文件
    "inlineSourceMap": false,                 // 生成单个 source maps 文件，而不是将 source maps 生成不同的文件
    "inlineSources": false,                   // 将代码与 source maps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性
    
    /* 其他选项 */
    "esModuleInterop": true,                  // 为导入 CommonJS 模块提供兼容性
    "skipLibCheck": true,                     // 跳过所有声明文件的类型检查
    "forceConsistentCasingInFileNames": true,  // 禁止对同一文件使用不一致大小写的引用
    "outDir": "./dist",                       // 指定输出目录
    "removeComments": true,                   // 删除编译后的所有注释
    "declaration": true,                      // 生成相应的 .d.ts 文件
    "declarationDir": "./types",              // 生成的声明文件的输出目录
    "composite": true                         // 启用项目编译
  },
  "include": ["src/**/*"],                    // 需要编译的文件
  "exclude": ["node_modules", "**/*.spec.ts"] // 排除编译的文件
}
